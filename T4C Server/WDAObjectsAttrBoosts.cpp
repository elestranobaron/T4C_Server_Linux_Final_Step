#include "stdafx.h"
#include "WDAObjectsAttrBoosts.h"
#include "Format.h"

using namespace std;
using namespace vir;

//////////////////////////////////////////////////////////////////////
// Construction/Destruction
//////////////////////////////////////////////////////////////////////

WDAObjectsAttrBoosts::WDAObjectsAttrBoosts( Logger &cLogger, DEBUG_LEVEL dlDebugHigh ) : WDATable( cLogger )
{
    MapDebugHighLogLevel( dlDebugHigh );
}

WDAObjectsAttrBoosts::~WDAObjectsAttrBoosts()
{

}


// Accessors
//////////////////////////////////////////////////////////////////////////////////////////
DWORD WDAObjectsAttrBoosts::GetID( void )
//////////////////////////////////////////////////////////////////////////////////////////
// Returns the boost ID.
//////////////////////////////////////////////////////////////////////////////////////////
{
    return dwID;
}

//////////////////////////////////////////////////////////////////////////////////////////
DWORD WDAObjectsAttrBoosts::GetStat( void )
//////////////////////////////////////////////////////////////////////////////////////////
// Returns the boosted stat
//////////////////////////////////////////////////////////////////////////////////////////
{
    return dwStat;
}

//////////////////////////////////////////////////////////////////////////////////////////
string WDAObjectsAttrBoosts::GetBoost( void )
//////////////////////////////////////////////////////////////////////////////////////////
// Returns the numerical boost.
//////////////////////////////////////////////////////////////////////////////////////////
{
    return bsBoost;
}
//////////////////////////////////////////////////////////////////////////////////////////
DWORD WDAObjectsAttrBoosts::GetMinInt( void )
//////////////////////////////////////////////////////////////////////////////////////////
//  Returns the minimum intellect requirement.
//////////////////////////////////////////////////////////////////////////////////////////
{
    return dwMinInt;
}
//////////////////////////////////////////////////////////////////////////////////////////
DWORD WDAObjectsAttrBoosts::GetMinWis( void )
//////////////////////////////////////////////////////////////////////////////////////////
//  Returns the minimum wisdom requirement.
//////////////////////////////////////////////////////////////////////////////////////////
{
    return dwMinWis;
}


//////////////////////////////////////////////////////////////////////////////////////////
void WDAObjectsAttrBoosts::SaveTo
//////////////////////////////////////////////////////////////////////////////////////////
// Saves to a wdaFile
// 
(
 WDAFile &wdaFile // The wdaFile
)
//////////////////////////////////////////////////////////////////////////////////////////
{
    TFormat cFormat;
    cOutput.Log(
        dlDebugHigh,
        cFormat(
            "\nBoost %u: Stat %u, value %s, MinInt %u, MinWis %u.",
            dwID,
            dwStat,
            bsBoost.c_str(),
            dwMinInt,
            dwMinWis
        )
    );

    wdaFile.Write( dwID );
    wdaFile.Write( dwStat );
    wdaFile.Write( bsBoost );
    wdaFile.Write( dwMinInt );
    wdaFile.Write( dwMinWis );
}    
    
//////////////////////////////////////////////////////////////////////////////////////////
void WDAObjectsAttrBoosts::CreateFrom
//////////////////////////////////////////////////////////////////////////////////////////
// Creates from a wdaFile.
// 
(
 WDAFile &wdaFile, // The wdaFile
 bool //createReadOnly
)
//////////////////////////////////////////////////////////////////////////////////////////
{
    wdaFile.Read( dwID );
    wdaFile.Read( dwStat );
    wdaFile.Read( bsBoost );
    wdaFile.Read( dwMinInt );
    wdaFile.Read( dwMinWis );

    TFormat cFormat;
    cOutput.Log(
        dlDebugHigh,
        cFormat(
            "\nBoost %u: Stat %u, value %s, MinInt %u, MinWis %u.",
            dwID,
            dwStat,
            bsBoost.c_str(),
            dwMinInt,
            dwMinWis
        )
    );

}

#ifndef NO_DAO_SUPPORT    
 
//////////////////////////////////////////////////////////////////////////////////////////
void WDAObjectsAttrBoosts::CreateFrom
//////////////////////////////////////////////////////////////////////////////////////////
//  Creates from a DAO support.
// 
(
 CDaoRecordset &cRecord, // The record from which to create this boost.
 CDaoDatabase &cDatabase // The database.
)
//////////////////////////////////////////////////////////////////////////////////////////
{
    // This function should never get passed an empty or out-of-bound recordset.
    ASSERT( !cRecord.IsEOF() );

    if( cRecord.IsEOF() ){
        return;
    }

    // Fetch the boost data.
    COleVariant oleData;

    cRecord.GetFieldValue( "ID", oleData );
    dwID =  V_I4( &oleData );

    cRecord.GetFieldValue( "Stat", oleData );
    dwStat = V_I4( &oleData );
    
    cRecord.GetFieldValue( "Boost", oleData );
    bsBoost = V_BSTRT( &oleData );

    cRecord.GetFieldValue( "MinInt", oleData );
    dwMinInt = V_I4( &oleData );

    cRecord.GetFieldValue( "MinWis", oleData );
    dwMinWis = V_I4( &oleData );

    TFormat cFormat;
    cOutput.Log(
        dlDebugHigh,
        cFormat(
            "\nBoost %u: Stat %u, value %s, MinInt %u, MinWis %u.",
            dwID,
            dwStat,
            bsBoost.c_str(),
            dwMinInt,
            dwMinWis
        )
    );
}
#endif
