#include "stdafx.h"
#include "TFC Server.h"
#include "UnitEffectManager.h"

#ifdef _DEBUG
#undef THIS_FILE
static char THIS_FILE[]=__FILE__;
#define new DEBUG_NEW
#endif

//////////////////////////////////////////////////////////////////////
// Construction/Destruction
//////////////////////////////////////////////////////////////////////

TemplateList< UnitEffectManager::EFFECT_LIST > UnitEffectManager::tlEffectList;


//////////////////////////////////////////////////////////////////////////////////////////
void UnitEffectManager::RegisterEffect
//////////////////////////////////////////////////////////////////////////////////////////
// Registers an effect.
// 
(
 DWORD dwEffect,			// The effect to register
 LPEFFECT_PROC lpFunc	// The effect proc.
)
//////////////////////////////////////////////////////////////////////////////////////////
{
	EFFECT_LIST *lpEffect = new EFFECT_LIST;

	lpEffect->dwEffect = dwEffect;
	lpEffect->lpFunc = lpFunc;

	tlEffectList.AddToTail( lpEffect );
}

//////////////////////////////////////////////////////////////////////////////////////////
LPEFFECT_PROC UnitEffectManager::GetEffectProc
//////////////////////////////////////////////////////////////////////////////////////////
// Returns the procedure affected to a spell effect.
// 
(
 DWORD dwEffect // The effect
)
// Return: LPEFFECT_PROC, The effect procedure.
//////////////////////////////////////////////////////////////////////////////////////////
{
	EFFECT_LIST *lpEffect;
	BOOL boFound = FALSE;

	tlEffectList.Lock();
	tlEffectList.ToHead();
	while( tlEffectList.QueryNext() && !boFound ){
		lpEffect = tlEffectList.Object();

		if( lpEffect->dwEffect == dwEffect ){
			boFound = TRUE;
		}
	}
	tlEffectList.Unlock();

	if( boFound ){
		TRACE( "\r\nEffect: Found proc!" );
		return lpEffect->lpFunc;
	}

	return NULL;
}
//////////////////////////////////////////////////////////////////////////////////////////
void UnitEffectManager::Destroy( void )
//////////////////////////////////////////////////////////////////////////////////////////
// Destroys all the spell effects registered.
// 
//////////////////////////////////////////////////////////////////////////////////////////
{
	tlEffectList.AnnihilateList();
}