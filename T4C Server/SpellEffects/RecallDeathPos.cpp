#include "stdafx.h"
#include "RecallDeathPos.h"

//////////////////////////////////////////////////////////////////////
// Construction/Destruction
//////////////////////////////////////////////////////////////////////

RecallDeathPos::RecallDeathPos()
{

}

RecallDeathPos::~RecallDeathPos()
{

}

REGISTER_SPELL_EFFECT( RECALLDEATHPOS_EFFECT, RecallDeathPos::NewFunc, RECALLDEATHPOS_EFFECT, NULL );

const WorldPos wlDeathPos = { 2948, 1041, 0 };

//////////////////////////////////////////////////////////////////////////////////////////
BOOL RecallDeathPos::InputParameter
//////////////////////////////////////////////////////////////////////////////////////////
// Input parameter
// 
(
 CString csParam,   // Parameter
 WORD wParamID      // Paremeter ID.
)
// Return: BOOL, TRUE if parameter was accepted.
//////////////////////////////////////////////////////////////////////////////////////////
{
    return true;
}

//////////////////////////////////////////////////////////////////////////////////////////
void RecallDeathPos::CallEffect
//////////////////////////////////////////////////////////////////////////////////////////
// Does the recall effect
// 
(
 SPELL_EFFECT_PROTOTYPE // The spell data.
)
//////////////////////////////////////////////////////////////////////////////////////////
{
    if( target != NULL ){

        WorldPos wlTeleportPos;

        DWORD dwPosValue = target->ViewFlag( __FLAG_DEATH_LOCATION );

        if( dwPosValue != 0 ){
            wlTeleportPos.X = ( (WORD)( dwPosValue >> 20 ) ) & 0x0FFF;	// Strip the first 4 bits of the word.
	    	wlTeleportPos.Y = ( (WORD)( dwPosValue >> 8 )  ) & 0x0FFF;
		    wlTeleportPos.world = ( (BYTE)( dwPosValue ) & 0xFF );
        }else{
            wlTeleportPos = wlDeathPos;
        }

        target->Teleport( wlTeleportPos, 0 );
    }
}

//////////////////////////////////////////////////////////////////////////////////////////
SpellEffect *RecallDeathPos::NewFunc
//////////////////////////////////////////////////////////////////////////////////////////
// Creates an instance of Recall effect.
// 
(
 LPSPELL_STRUCT lpSpell // The spell structure
)
// Return: SpellEffect, a pointer to a Recall spell effect.
//////////////////////////////////////////////////////////////////////////////////////////
{
   CREATE_EFFECT_HANDLE( RecallDeathPos, 0 );    
}