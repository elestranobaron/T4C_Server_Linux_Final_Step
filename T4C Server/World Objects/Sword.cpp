#include "stdafx.h"
#include "Sword.h"

//////////////////////////////////////////////////////////////////////
// Construction/Destruction
//////////////////////////////////////////////////////////////////////

Sword::Sword()
{

}

Sword::~Sword()
{
}

//////////////////////////////////////////////////////////////////////////////////////////
void Sword::OnAttack
//////////////////////////////////////////////////////////////////////////////////////////
// When a sword attacks
// 
(
 UNIT_FUNC_PROTOTYPE // sword prototype 
)
//////////////////////////////////////////////////////////////////////////////////////////
{
	ObjectStructure::OnAttack( UNIT_FUNC_PARAM );
	
	LPATTACK_STRUCTURE Blow = (LPATTACK_STRUCTURE)valueIN;
	if(Blow) Blow->Strike += weapon.cDamage.GetBoost( medium, target );
   
    TRACE( "\nmedium=0x%x target=0x%x, attack=%u.", medium, target, (int)weapon.cDamage.GetBoost( medium, target ) );

    medium->DealExhaust( weapon.cDealtExhaust.GetBoost( medium, target ), 0, 0 );
}

//////////////////////////////////////////////////////////////////////////////////////////
ObjectStructure *Sword::CreateObject( void ){
	return new Sword;
}

//////////////////////////////////////////////////////////////////////////////////////////
void Sword::OnAttacked
//////////////////////////////////////////////////////////////////////////////////////////
// When a swords gets attacked ( uh?! well yes, swords can have AC... )
// 
(
 UNIT_FUNC_PROTOTYPE
)
//////////////////////////////////////////////////////////////////////////////////////////
{
	ObjectStructure::OnAttacked( UNIT_FUNC_PARAM );
	
	LPATTACK_STRUCTURE Blow = (LPATTACK_STRUCTURE)valueIN;
	if(Blow) Blow->Strike -= armor.AC;
}