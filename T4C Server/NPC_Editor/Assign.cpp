#include "stdafx.h"
#include "Assign.h"

using namespace std;

namespace NPC_Editor
{

Assign::Assign( std::string name, std::string helpText, InstructionIds id ) :
    Instruction( name, helpText, id )
{
}

Assign::~Assign()
{
}
/////////////////////////////////////////////////////////////////////////////
void Assign::SaveImp
/////////////////////////////////////////////////////////////////////////////
// 
//
(
WDAFile &file
)
// Return: WDAFile
/////////////////////////////////////////////////////////////////////////////
{
    file.Write( var );
    file.Write( value );
}
/////////////////////////////////////////////////////////////////////////////
void Assign::LoadImp
/////////////////////////////////////////////////////////////////////////////
// 
//
(
WDAFile &file
)
// Return: WDAFile
/////////////////////////////////////////////////////////////////////////////
{
    file.Read( var );
    file.Read( value );
}

//////////////////////////////////////////////////////////////////////////////////////////
Instruction *Assign::Clone( void )
//////////////////////////////////////////////////////////////////////////////////////////
{
    Assign *a = new Assign( this->GetName(), this->GetHelpText(), this->GetId() );

    // Copy the instruction data.
    a->Copy( this );
    a->var = this->var;
    a->value = this->value;

    return a;
}

//////////////////////////////////////////////////////////////////////////////////////////
void Assign::UpdateName( void )
//////////////////////////////////////////////////////////////////////////////////////////
// Update the name
// 
//////////////////////////////////////////////////////////////////////////////////////////
{
    char buf[ 4096 ];
    sprintf( buf, "%s = %s", var.c_str(), value.c_str() );

    SetName( buf );
}

} // NPC_Editor

