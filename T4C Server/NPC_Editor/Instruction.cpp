#include "stdafx.h"
#include "Instruction.h"

using namespace std;

namespace NPC_Editor
{

Instruction::Instruction( std::string iname, std::string ihelpText, InstructionIds iid ) :
   name( iname ), helpText( ihelpText ), id( iid )
{

}

Instruction::~Instruction()
{
}
/////////////////////////////////////////////////////////////////////////////
bool Instruction::AddInstruction
/////////////////////////////////////////////////////////////////////////////
// 
//
(
Instruction *ins,
Instruction *relativeIns,
InsertionRelation relation,
bool &stopSearch
)
// Return: bool, false
/////////////////////////////////////////////////////////////////////////////
{
    // If the instruction is related to this one.
    if( relativeIns == this && relation == asChild ){
        stopSearch = true;
        SetErrorStrId( IDS_CANNOT_ADD_SUBINSTRUCTION );
    }
    
    return false;	
}
/////////////////////////////////////////////////////////////////////////////
void Instruction::DeleteInstruction
/////////////////////////////////////////////////////////////////////////////
// 
//
(
Instruction *ins
)
/////////////////////////////////////////////////////////////////////////////
{
	
}
/////////////////////////////////////////////////////////////////////////////
bool Instruction::MoveInstruction
/////////////////////////////////////////////////////////////////////////////
// 
//
(
Instruction *ins,
Instruction *relativeIns,
InsertionRelation relation
)
// Return: bool, false
/////////////////////////////////////////////////////////////////////////////
{
    return false;	
}

/////////////////////////////////////////////////////////////////////////////
void Instruction::Save
/////////////////////////////////////////////////////////////////////////////
// 
//
(
WDAFile &file
)
// Return: WDAFile
/////////////////////////////////////////////////////////////////////////////
{
    // Write at least a version number to give a futur possible placeholder
    DWORD version = 0x01;

    file.Write( version );
}
/////////////////////////////////////////////////////////////////////////////
void Instruction::Load
/////////////////////////////////////////////////////////////////////////////
// 
//
(
WDAFile &file
)
// Return: WDAFile
/////////////////////////////////////////////////////////////////////////////
{
    DWORD version;

    file.Read( version );
}

//////////////////////////////////////////////////////////////////////////////////////////
void Instruction::GetSubInstructions
//////////////////////////////////////////////////////////////////////////////////////////
// Default to returning nothing.
// 
(
 std::list< Instruction * > &subInstructions
)
//////////////////////////////////////////////////////////////////////////////////////////
{
    return;    
}

//////////////////////////////////////////////////////////////////////////////////////////
void Instruction::Copy
//////////////////////////////////////////////////////////////////////////////////////////
// Copies an instruction according to the copy.
// 
(
 Instruction *theCopy // 
)
//////////////////////////////////////////////////////////////////////////////////////////
{
    name = theCopy->name;
    helpText = theCopy->helpText;
	id = theCopy->id;
}

} // NPC_Editor

