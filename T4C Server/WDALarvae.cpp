#include "stdafx.h"
#include "WDALarvae.h"
#include "Format.h"

using namespace std;
using namespace vir;

//////////////////////////////////////////////////////////////////////
// Construction/Destruction
//////////////////////////////////////////////////////////////////////

WDALarvae::WDALarvae( Logger &cLogger, DEBUG_LEVEL dlDebugHigh ) : WDATable( cLogger )
{
    MapDebugHighLogLevel( dlDebugHigh );
}

WDALarvae::~WDALarvae()
{

}

//////////////////////////////////////////////////////////////////////////////////////////
const string &WDALarvae::GetLarvaID( void )
//////////////////////////////////////////////////////////////////////////////////////////
//  Returns the larva ID
//////////////////////////////////////////////////////////////////////////////////////////
{
    return csLarvaID;
}

    
//////////////////////////////////////////////////////////////////////////////////////////
void WDALarvae::SaveTo
//////////////////////////////////////////////////////////////////////////////////////////
// Saves to a wdaFile
// 
(
 WDAFile &wdaFile // the wdaFile
)
//////////////////////////////////////////////////////////////////////////////////////////
{
    // Write the larvae.
    TFormat cFormat;
    cOutput.Log(
        dlDebugHigh,
        cFormat(
            "\n  Writing larva %s.",
            csLarvaID.c_str()
        )
    );

    wdaFile.Write( csLarvaID );
}
    
    
//////////////////////////////////////////////////////////////////////////////////////////
void WDALarvae::CreateFrom
//////////////////////////////////////////////////////////////////////////////////////////
// Creates from a wdaFile.
// 
(
 WDAFile &wdaFile, // The wdaFile
 bool //createReadOnly
)
//////////////////////////////////////////////////////////////////////////////////////////
{
    wdaFile.Read( csLarvaID );

    TFormat cFormat;
    cOutput.Log(
        dlDebugHigh,
        cFormat(
            "\n  Found larva %s.",
            csLarvaID.c_str()
        )
    );
}

#ifndef NO_DAO_SUPPORT    
    
//////////////////////////////////////////////////////////////////////////////////////////
void WDALarvae::CreateFrom
//////////////////////////////////////////////////////////////////////////////////////////
//  Creates the larvae from a single record.
// 
(
 CDaoRecordset &cRecord, // The record
 CDaoDatabase &cDatabase // The database.
)
//////////////////////////////////////////////////////////////////////////////////////////
{
    // This function should never get an empty or out-of-bounds record.
    ASSERT( !cRecord.IsEOF() );

    if( cRecord.IsEOF() ){
        return;
    }

    COleVariant oleData;

    cRecord.GetFieldValue( "MonsterID", oleData );
    csLarvaID = V_BSTRT( &oleData );

    TFormat cFormat;
    cOutput.Log(
        dlDebugHigh,
        cFormat(
            "\n  Found larva %s.",
            csLarvaID.c_str()
        )
    );
}
#endif
